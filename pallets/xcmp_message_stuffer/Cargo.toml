[package]
name = "pallet-xcmp-message-stuffer"
authors = ["Web3 Foundation"]
description = "FRAME pallet stuffing xcm messages into an xcmp message which then gets stuff in a MMR then into a Trie"
version = "0.1.0"
license = "Unlicense"
homepage = "https://substrate.io"
repository = "https://github.com/paritytech/substrate/"
edition = "2021"

[package.metadata.docs.rs]
targets = ["x86_64-unknown-linux-gnu"]

[dependencies]
parity-scale-codec = { workspace = true, default-features = false, features = ["derive"] }
scale-info = { default-features = false, features = ["derive"], workspace = true }
log = { workspace = true }

# Substrate
frame-benchmarking = { workspace = true, default-features = false, optional = true }
frame-support = { workspace = true, default-features = false }
frame-system = { workspace = true, default-features = false }
pallet-mmr = { workspace = true, default-features = false }
sp-consensus-beefy = { workspace = true, default-features = false }
sp-core = { workspace = true, default-features = false }
sp-runtime = { workspace = true, default-features = false }
sp-mmr-primitives = { workspace = true }

# Cumulus
cumulus-primitives-core = { workspace = true, default-features = false }

[dev-dependencies]
serde = { workspace = true }

# Substrate
sp-io = { workspace = true, default-features = false }
sp-runtime = { workspace = true, default-features = false }
pallet-balances = { workspace = true, default-features = false }

# Polkadot
xcm = { workspace = true }
xcm-executor = { workspace = true }
xcm-builder = { workspace = true }

# Cumulus
cumulus-pallet-xcmp-queue = { workspace = true, features = ["std"] }
cumulus-pallet-parachain-system = { workspace = true }

[features]
default = ["std"]
runtime-benchmarks = ["frame-benchmarking/runtime-benchmarks"]
std = [
	"parity-scale-codec/std",
	"cumulus-pallet-parachain-system/std",
    "cumulus-primitives-core/std",
	"frame-benchmarking/std",
	"frame-support/std",
    "pallet-mmr/std",
	"frame-system/std",
	"log/std",
	"scale-info/std",
	"sp-core/std",
	"sp-io/std",
	"sp-runtime/std",
    "sp-consensus-beefy/std",
	"sp-runtime/std",
	"xcm/std",
	"xcm-executor/std",
	"xcm-builder/std",
]
try-runtime = [ "frame-support/try-runtime" ]
